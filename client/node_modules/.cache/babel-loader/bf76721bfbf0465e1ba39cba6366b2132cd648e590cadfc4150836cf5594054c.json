{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const articlesAPI = createApi({\n  reducerPath: 'articlesAPI',\n  tagTypes: ['Post'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3100/v1/article/',\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      console.log('israel', getState().authReducer);\n      const {\n        access_token\n      } = getState().authReducer;\n      console.log('articlesAPI:: prepareHeaders access_token:', access_token);\n      if (access_token) {\n        headers.set('authorization', `Bearer ${access_token}`);\n      }\n      return headers;\n    }\n  }),\n  endpoints: build => ({\n    getAllArticles: build.mutation({\n      query: () => ({\n        url: `all`,\n        method: 'GET'\n      })\n    }),\n    getMyArticles: build.mutation({\n      query: () => ({\n        url: `my`,\n        method: 'GET'\n      })\n    })\n  })\n});\nexport const {\n  useGetAllArticlesMutation,\n  useGetMyArticlesMutation\n} = articlesAPI;","map":{"version":3,"names":["createApi","fetchBaseQuery","articlesAPI","reducerPath","tagTypes","baseQuery","baseUrl","prepareHeaders","headers","_ref","getState","console","log","authReducer","access_token","set","endpoints","build","getAllArticles","mutation","query","url","method","getMyArticles","useGetAllArticlesMutation","useGetMyArticlesMutation"],"sources":["/Users/anupammac/Documents/GIT/jinn/client/src/app/services/articles.service.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { RootState } from '../redux/store'\n\nexport const articlesAPI = createApi({\n  reducerPath: 'articlesAPI',\n  tagTypes: ['Post'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3100/v1/article/',\n    prepareHeaders: (headers, { getState }) => {\n      console.log('israel', (getState() as RootState).authReducer)\n      const { access_token } = (getState() as RootState).authReducer\n      console.log('articlesAPI:: prepareHeaders access_token:', access_token)\n      if (access_token) {\n        headers.set('authorization', `Bearer ${access_token}`)\n      }\n      return headers\n    },\n  }),\n  endpoints: (build) => ({\n    getAllArticles: build.mutation<any, null>({\n      query: () => ({\n        url: `all`,\n        method: 'GET',\n      }),\n    }),\n    getMyArticles: build.mutation<any, null>({\n      query: () => ({\n        url: `my`,\n        method: 'GET',\n      }),\n    }),\n  }),\n})\n\nexport const { useGetAllArticlesMutation, useGetMyArticlesMutation } = articlesAPI\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aAAa;EAC1BC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAEJ,cAAc,CAAC;IACxBK,OAAO,EAAE,mCAAmC;IAC5CC,cAAc,EAAEA,CAACC,OAAO,EAAAC,IAAA,KAAmB;MAAA,IAAjB;QAAEC;MAAS,CAAC,GAAAD,IAAA;MACpCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAGF,QAAQ,CAAC,CAAC,CAAeG,WAAW,CAAC;MAC5D,MAAM;QAAEC;MAAa,CAAC,GAAIJ,QAAQ,CAAC,CAAC,CAAeG,WAAW;MAC9DF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,YAAY,CAAC;MACvE,IAAIA,YAAY,EAAE;QAChBN,OAAO,CAACO,GAAG,CAAC,eAAe,EAAG,UAASD,YAAa,EAAC,CAAC;MACxD;MACA,OAAON,OAAO;IAChB;EACF,CAAC,CAAC;EACFQ,SAAS,EAAGC,KAAK,KAAM;IACrBC,cAAc,EAAED,KAAK,CAACE,QAAQ,CAAY;MACxCC,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAG,KAAI;QACVC,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFC,aAAa,EAAEN,KAAK,CAACE,QAAQ,CAAY;MACvCC,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAG,IAAG;QACTC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,yBAAyB;EAAEC;AAAyB,CAAC,GAAGvB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}