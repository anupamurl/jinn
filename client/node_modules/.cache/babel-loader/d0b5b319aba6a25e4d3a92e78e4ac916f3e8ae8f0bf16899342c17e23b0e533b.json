{"ast":null,"code":"var _jsxFileName = \"/Users/anupammac/Documents/GIT/jinn/client/src/app/pages/login/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './loginPage.css';\nimport { NotificationManager } from 'react-notifications';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { setAuthenticatedUser } from '../../redux/slices/auth.slice';\nimport { useLoginMutation } from '../../services/auth.service';\nimport { setShowLoader } from '../../redux/slices/general.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n  terms: yup.bool().required().oneOf([true], 'Terms must be accepted')\n});\nconst LoginPage = () => {\n  _s();\n  const [login, {\n    data,\n    error,\n    isLoading\n  }] = useLoginMutation();\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (data && !error) {\n      console.log('LoginPage:: data:', data);\n      NotificationManager.success(`Welcome ${data.name}`, 'Authentication Success');\n      localStorage.setItem('user', JSON.stringify(data));\n      dispatch(setAuthenticatedUser(data));\n      navigate('home');\n    } else if (error) {\n      NotificationManager.error('Error authenticating user, please check your email and password', 'Authentication Error');\n      console.log(`LoginPage:: Authentication error`, error);\n    }\n  }, [data, error, dispatch]);\n  useEffect(() => {\n    dispatch(setShowLoader(isLoading));\n  }, [isLoading, dispatch]);\n  const handleLogin = formValue => {\n    const {\n      email,\n      password\n    } = formValue;\n    login({\n      email,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: handleLogin,\n      initialValues: {\n        email: '',\n        password: '',\n        terms: false\n      },\n      children: _ref => {\n        let {\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        } = _ref;\n        return (\n          /*#__PURE__*/\n          // <Card className=\"card\" style={{ width: '18rem' }}>\n          //   <Card.Title className=\"title\">Login Page</Card.Title>\n          //   <Form className=\"form\" noValidate onSubmit={handleSubmit}>\n          //     <Form.Group as={Col} md=\"12\" controlId=\"validationFormikEmail\">\n          //       <Form.Label>Email</Form.Label>\n          //       <InputGroup hasValidation>\n          //         <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n          //         <Form.Control\n          //           type=\"text\"\n          //           placeholder=\"Your email address\"\n          //           aria-describedby=\"inputGroupPrepend\"\n          //           name=\"email\"\n          //           value={values.email}\n          //           onChange={handleChange}\n          //           isInvalid={!!errors.email}\n          //         />\n          //         <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n          //       </InputGroup>\n          //     </Form.Group>\n          //     <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n          //       <Form.Label>Password</Form.Label>\n          //       <InputGroup hasValidation>\n          //         <InputGroup.Text id=\"inputGroupPrepend\">&#128273;</InputGroup.Text>\n          //         <Form.Control\n          //           type=\"password\"\n          //           placeholder=\"Your password\"\n          //           name=\"password\"\n          //           value={values.password}\n          //           onChange={handleChange}\n          //           isValid={touched.password && !errors.password}\n          //         />\n          //       </InputGroup>\n          //       <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n          //     </Form.Group>\n          //     <Form.Group>\n          //       <Form.Check\n          //         required\n          //         name=\"terms\"\n          //         label=\"Agree to terms and conditions\"\n          //         onChange={handleChange}\n          //         isInvalid={!!errors.terms}\n          //         feedback={errors.terms}\n          //         feedbackType=\"invalid\"\n          //         id=\"validationFormik0\"\n          //       />\n          //     </Form.Group>\n          //     <Button type=\"submit\">Submit form</Button>\n          //   </Form>\n          // </Card>\n          _jsxDEV(\"div\", {\n            className: \"login_main_div\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_inner_div\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"image/login_image.svg\",\n                  alt: \"\",\n                  className: \"img-fluid\",\n                  height: \"50\",\n                  width: \"45\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login_form\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  action: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form_input_div\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"\",\n                      id: \"\",\n                      placeholder: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form_input_div\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"\",\n                      id: \"\",\n                      placeholder: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form_button\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        );\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"FUtacGs0Mp345vR8hTzQ3AV/w8w=\", false, function () {\n  return [useLoginMutation, useAppDispatch, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["yup","Formik","NotificationManager","useNavigate","useEffect","useAppDispatch","setAuthenticatedUser","useLoginMutation","setShowLoader","jsxDEV","_jsxDEV","schema","object","shape","email","string","required","password","terms","bool","oneOf","LoginPage","_s","login","data","error","isLoading","dispatch","navigate","console","log","success","name","localStorage","setItem","JSON","stringify","handleLogin","formValue","className","children","validationSchema","onSubmit","initialValues","_ref","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","src","alt","height","width","fileName","_jsxFileName","lineNumber","columnNumber","action","type","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/anupammac/Documents/GIT/jinn/client/src/app/pages/login/LoginPage.tsx"],"sourcesContent":["import Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport * as yup from 'yup'\nimport { Formik } from 'formik'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './loginPage.css'\nimport { NotificationManager } from 'react-notifications'\nimport { useNavigate } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { useAppDispatch } from '../../redux/hooks'\nimport { setAuthenticatedUser } from '../../redux/slices/auth.slice'\nimport { Card } from 'react-bootstrap'\nimport { useLoginMutation } from '../../services/auth.service'\nimport { setShowLoader } from '../../redux/slices/general.slice'\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n  terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\n})\n\nconst LoginPage = () => {\n  const [login, { data, error, isLoading }] = useLoginMutation()\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (data && !error) {\n      console.log('LoginPage:: data:', data)\n      NotificationManager.success(`Welcome ${data.name}`, 'Authentication Success')\n      localStorage.setItem('user', JSON.stringify(data))\n      dispatch(setAuthenticatedUser(data))\n      navigate('home')\n    } else if (error) {\n      NotificationManager.error('Error authenticating user, please check your email and password', 'Authentication Error')\n      console.log(`LoginPage:: Authentication error`, error)\n    }\n  }, [data, error, dispatch])\n\n  useEffect(() => {\n    dispatch(setShowLoader(isLoading))\n  }, [isLoading, dispatch])\n\n  const handleLogin = (formValue: { email: string; password: string }) => {\n    const { email, password } = formValue\n    login({ email, password })\n  }\n\n  return (\n    <div className=\"login-wrapper\">\n      <Formik\n        validationSchema={schema}\n        onSubmit={handleLogin}\n        initialValues={{\n          email: '',\n          password: '',\n          terms: false,\n        }}\n      >\n        {({ handleSubmit, handleChange, handleBlur, values, touched, isValid, errors }) => (\n          // <Card className=\"card\" style={{ width: '18rem' }}>\n          //   <Card.Title className=\"title\">Login Page</Card.Title>\n          //   <Form className=\"form\" noValidate onSubmit={handleSubmit}>\n          //     <Form.Group as={Col} md=\"12\" controlId=\"validationFormikEmail\">\n          //       <Form.Label>Email</Form.Label>\n          //       <InputGroup hasValidation>\n          //         <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n          //         <Form.Control\n          //           type=\"text\"\n          //           placeholder=\"Your email address\"\n          //           aria-describedby=\"inputGroupPrepend\"\n          //           name=\"email\"\n          //           value={values.email}\n          //           onChange={handleChange}\n          //           isInvalid={!!errors.email}\n          //         />\n          //         <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\n          //       </InputGroup>\n          //     </Form.Group>\n          //     <Form.Group as={Col} md=\"12\" controlId=\"validationFormik02\">\n          //       <Form.Label>Password</Form.Label>\n          //       <InputGroup hasValidation>\n          //         <InputGroup.Text id=\"inputGroupPrepend\">&#128273;</InputGroup.Text>\n          //         <Form.Control\n          //           type=\"password\"\n          //           placeholder=\"Your password\"\n          //           name=\"password\"\n          //           value={values.password}\n          //           onChange={handleChange}\n          //           isValid={touched.password && !errors.password}\n          //         />\n          //       </InputGroup>\n          //       <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\n          //     </Form.Group>\n          //     <Form.Group>\n          //       <Form.Check\n          //         required\n          //         name=\"terms\"\n          //         label=\"Agree to terms and conditions\"\n          //         onChange={handleChange}\n          //         isInvalid={!!errors.terms}\n          //         feedback={errors.terms}\n          //         feedbackType=\"invalid\"\n          //         id=\"validationFormik0\"\n          //       />\n          //     </Form.Group>\n          //     <Button type=\"submit\">Submit form</Button>\n          //   </Form>\n          // </Card>\n\n          <div className=\"login_main_div\">\n          <div className=\"login_inner_div\">\n              <div className=\"login_img\">\n                  <img src=\"image/login_image.svg\" alt=\"\" className=\"img-fluid\" height=\"50\" width=\"45\" />\n              </div>\n              <div className=\"login_form\">\n                  <form action=\"\">\n                      <div className=\"form_input_div\">\n                          <input type=\"text\" name=\"\" id=\"\" placeholder=\"Email address\" />\n                      </div>\n                      <div className=\"form_input_div\">\n                          <input type=\"text\" name=\"\" id=\"\" placeholder=\"Password\" />\n                      </div>\n                      <div className=\"form_button\">\n                          <button>Login</button>\n                      </div>\n                  </form>\n              </div>\n          </div>\n      </div>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}